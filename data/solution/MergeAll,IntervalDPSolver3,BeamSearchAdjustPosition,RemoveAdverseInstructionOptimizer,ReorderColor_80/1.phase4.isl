# command line  : vs\x64\Release\solver.exe solve MergeAll,IntervalDPSolver3,BeamSearchAdjustPosition,RemoveAdverseInstructionOptimizer,ReorderColor data\problems\1.txt D:\hnoda\icfpc2022\data\solution\MergeAll,IntervalDPSolver3,BeamSearchAdjustPosition,RemoveAdverseInstructionOptimizer,ReorderColor_80\1.isl --interval-dp-num-intervals=80 --interval-dp-2-num-intervals=80 --interval-dp-3-num-intervals=80 --interval-dp-3-num-threads=2 --interval-dp-3-allow-point-cut-merge=true --interval-dp-border-num-intervals=80 --interval-dp-border-num-threads=2 --greedy-adjust-position-loop=100 --greedy-adjust-position-color --beam-search-adjust-position-loop=100 --beam-search-adjust-position-beam-width=10 --beam-search-adjust-position-color --erase-background
# git commit id : 35c3490fb8362dc08cd0abbb1fd6e5b2c2a783f4
# resolved problem : data\problems\1.txt
# Solver     : MergeAll
# Inst. Cost : 0 (0.00 %)
#  Sim. Cost : 194616 (100.00 %)
# Total Cost : 194616
# Elapsed    : 9.999999999999999e-06 s
# cost = 40974
# num_intervals = 80
color [0] [0, 74, 173, 255]
cut [0] [x] [357]
color [0.0] [255, 255, 255, 255]
cut [0.0] [315, 360]
merge [0.0.3] [0.0.0]
color [1] [0, 74, 173, 255]
cut [1] [y] [43]
color [1.1] [0, 0, 0, 255]
cut [1.1] [280, 360]
merge [1.1.3] [1.1.0]
color [2] [127, 127, 127, 255]
cut [2] [x] [277]
color [2.0] [255, 255, 255, 255]
cut [2.0] [40, 360]
merge [2.0.1] [2.0.2]
cut [3] [240, 360]
merge [3.3] [3.0]
color [4] [0, 0, 0, 255]
cut [4] [80, 360]
merge [4.1] [4.2]
color [5] [255, 255, 255, 255]
cut [5] [120, 360]
merge [5.1] [5.2]
color [6] [0, 0, 0, 255]
cut [6] [160, 360]
merge [6.1] [6.2]
color [7] [255, 255, 255, 255]
cut [7] [200, 360]
merge [7.1] [7.2]
color [8] [0, 0, 0, 255]
cut [8] [y] [360]
color [8.0] [255, 255, 255, 255]
cut [8.0] [y] [320]
color [8.0.0] [0, 0, 0, 255]
cut [8.0.0] [y] [280]
color [8.0.0.0] [255, 255, 255, 255]
cut [8.0.0.0] [y] [241]
color [8.0.0.0.0] [0, 0, 0, 255]
cut [8.0.0.0.0] [y] [201]
color [8.0.0.0.0.0] [255, 255, 255, 255]
cut [8.0.0.0.0.0] [y] [162]
color [8.0.0.0.0.0.0] [0, 0, 0, 255]
cut [8.0.0.0.0.0.0] [y] [123]
color [8.0.0.0.0.0.0.0] [255, 255, 255, 255]
cut [8.0.0.0.0.0.0.0] [y] [83]
color [8.0.0.0.0.0.0.0.0] [0, 0, 0, 255]
color [7.0] [0, 0, 0, 255]
cut [7.0] [y] [320]
color [7.0.0] [255, 255, 255, 255]
cut [7.0.0] [y] [280]
color [7.0.0.0] [0, 0, 0, 255]
cut [7.0.0.0] [y] [241]
color [7.0.0.0.0] [255, 255, 255, 255]
cut [7.0.0.0.0] [y] [202]
color [7.0.0.0.0.0] [0, 0, 0, 255]
cut [7.0.0.0.0.0] [y] [162]
color [7.0.0.0.0.0.0] [255, 255, 255, 255]
cut [7.0.0.0.0.0.0] [y] [123]
color [7.0.0.0.0.0.0.0] [0, 0, 0, 255]
cut [7.0.0.0.0.0.0.0] [y] [83]
color [7.0.0.0.0.0.0.0.0] [255, 255, 255, 255]
color [6.0] [255, 255, 255, 255]
cut [6.0] [y] [320]
color [6.0.0] [0, 0, 0, 255]
cut [6.0.0] [y] [281]
color [6.0.0.0] [255, 255, 255, 255]
cut [6.0.0.0] [y] [241]
color [6.0.0.0.0] [0, 0, 0, 255]
cut [6.0.0.0.0] [y] [202]
color [6.0.0.0.0.0] [255, 255, 255, 255]
cut [6.0.0.0.0.0] [y] [162]
color [6.0.0.0.0.0.0] [0, 0, 0, 255]
cut [6.0.0.0.0.0.0] [y] [123]
color [6.0.0.0.0.0.0.0] [255, 255, 255, 255]
cut [6.0.0.0.0.0.0.0] [y] [83]
color [6.0.0.0.0.0.0.0.0] [0, 0, 0, 255]
color [5.0] [0, 0, 0, 255]
cut [5.0] [y] [320]
color [5.0.0] [255, 255, 255, 255]
cut [5.0.0] [y] [280]
color [5.0.0.0] [0, 0, 0, 255]
cut [5.0.0.0] [y] [241]
color [5.0.0.0.0] [255, 255, 255, 255]
cut [5.0.0.0.0] [y] [202]
color [5.0.0.0.0.0] [0, 0, 0, 255]
cut [5.0.0.0.0.0] [y] [162]
color [5.0.0.0.0.0.0] [255, 255, 255, 255]
cut [5.0.0.0.0.0.0] [y] [123]
color [5.0.0.0.0.0.0.0] [0, 0, 0, 255]
cut [5.0.0.0.0.0.0.0] [y] [83]
color [5.0.0.0.0.0.0.0.0] [255, 255, 255, 255]
color [4.0] [255, 255, 255, 255]
cut [4.0] [y] [320]
color [4.0.0] [0, 0, 0, 255]
cut [4.0.0] [y] [280]
color [4.0.0.0] [255, 255, 255, 255]
cut [4.0.0.0] [y] [241]
color [4.0.0.0.0] [0, 0, 0, 255]
cut [4.0.0.0.0] [y] [202]
color [4.0.0.0.0.0] [255, 255, 255, 255]
cut [4.0.0.0.0.0] [y] [162]
color [4.0.0.0.0.0.0] [0, 0, 0, 255]
cut [4.0.0.0.0.0.0] [y] [123]
color [4.0.0.0.0.0.0.0] [255, 255, 255, 255]
cut [4.0.0.0.0.0.0.0] [y] [83]
color [4.0.0.0.0.0.0.0.0] [0, 0, 0, 255]
color [3.1] [0, 0, 0, 255]
cut [3.1] [y] [320]
color [3.1.0] [255, 255, 255, 255]
cut [3.1.0] [y] [281]
color [3.1.0.0] [0, 0, 0, 255]
cut [3.1.0.0] [y] [241]
color [3.1.0.0.0] [255, 255, 255, 255]
cut [3.1.0.0.0] [y] [202]
color [3.1.0.0.0.0] [0, 0, 0, 255]
cut [3.1.0.0.0.0] [y] [162]
color [3.1.0.0.0.0.0] [255, 255, 255, 255]
cut [3.1.0.0.0.0.0] [y] [123]
color [3.1.0.0.0.0.0.0] [0, 0, 0, 255]
cut [3.1.0.0.0.0.0.0] [y] [83]
color [3.1.0.0.0.0.0.0.0] [255, 255, 255, 255]
color [2.0.0] [0, 0, 0, 255]
cut [2.0.0] [y] [320]
color [2.0.0.0] [255, 255, 255, 255]
cut [2.0.0.0] [y] [281]
color [2.0.0.0.0] [0, 0, 0, 255]
cut [2.0.0.0.0] [y] [241]
color [2.0.0.0.0.0] [255, 255, 255, 255]
cut [2.0.0.0.0.0] [y] [202]
color [2.0.0.0.0.0.0] [0, 0, 0, 255]
cut [2.0.0.0.0.0.0] [y] [162]
color [2.0.0.0.0.0.0.0] [255, 255, 255, 255]
cut [2.0.0.0.0.0.0.0] [y] [123]
cut [2.0.0.0.0.0.0.0.0] [y] [82]
color [2.0.0.0.0.0.0.0.0.1] [0, 0, 0, 255]
color [1.1.1] [255, 255, 255, 255]
cut [1.1.1] [y] [320]
color [1.1.1.0] [0, 0, 0, 255]
cut [1.1.1.0] [y] [282]
color [1.1.1.0.0] [255, 255, 255, 255]
cut [1.1.1.0.0] [y] [241]
color [1.1.1.0.0.0] [0, 0, 0, 255]
cut [1.1.1.0.0.0] [y] [202]
color [1.1.1.0.0.0.0] [255, 255, 255, 255]
cut [1.1.1.0.0.0.0] [y] [162]
color [1.1.1.0.0.0.0.0] [0, 0, 0, 255]
cut [1.1.1.0.0.0.0.0] [y] [123]
color [1.1.1.0.0.0.0.0.0] [255, 255, 255, 255]
cut [1.1.1.0.0.0.0.0.0] [y] [83]
color [1.1.1.0.0.0.0.0.0.0] [0, 0, 0, 255]
color [0.0.1] [0, 0, 0, 255]
cut [0.0.1] [y] [320]
color [0.0.1.0] [255, 255, 255, 255]
cut [0.0.1.0] [y] [282]
color [0.0.1.0.0] [0, 0, 0, 255]
cut [0.0.1.0.0] [y] [242]
color [0.0.1.0.0.0] [255, 255, 255, 255]
cut [0.0.1.0.0.0] [y] [203]
color [0.0.1.0.0.0.0] [0, 0, 0, 255]
cut [0.0.1.0.0.0.0] [y] [162]
color [0.0.1.0.0.0.0.0] [255, 255, 255, 255]
cut [0.0.1.0.0.0.0.0] [y] [123]
color [0.0.1.0.0.0.0.0.0] [0, 0, 0, 255]
cut [0.0.1.0.0.0.0.0.0] [y] [83]
color [0.0.1.0.0.0.0.0.0.0] [0, 74, 173, 255]
# Solver     : IntervalDPSolver3
# Inst. Cost : 22793 (55.63 %)
#  Sim. Cost : 18181 (44.37 %)
# Total Cost : 40974
# Elapsed    : 3787.9971379999997 s
# Solver     : BeamSearchAdjustPosition
# Inst. Cost : 23401 (71.59 %)
#  Sim. Cost : 9286 (28.41 %)
# Total Cost : 32687
# Elapsed    : 464.38601 s
# Solver     : RemoveAdverseInstructionOptimizer
# Inst. Cost : 23142 (71.36 %)
#  Sim. Cost : 9286 (28.64 %)
# Total Cost : 32428
# Elapsed    : 0.087027 s
