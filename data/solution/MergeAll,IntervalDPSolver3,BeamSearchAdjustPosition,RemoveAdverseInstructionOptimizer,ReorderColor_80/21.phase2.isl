# command line  : vs\x64\Release\solver.exe solve MergeAll,IntervalDPSolver3,BeamSearchAdjustPosition,RemoveAdverseInstructionOptimizer,ReorderColor data\problems\21.txt D:\hnoda\icfpc2022\data\solution\MergeAll,IntervalDPSolver3,BeamSearchAdjustPosition,RemoveAdverseInstructionOptimizer,ReorderColor_80\21.isl --interval-dp-num-intervals=80 --interval-dp-2-num-intervals=80 --interval-dp-3-num-intervals=80 --interval-dp-3-num-threads=2 --interval-dp-3-allow-point-cut-merge=true --interval-dp-border-num-intervals=80 --interval-dp-border-num-threads=2 --greedy-adjust-position-loop=100 --greedy-adjust-position-color --beam-search-adjust-position-loop=100 --beam-search-adjust-position-beam-width=10 --beam-search-adjust-position-color --erase-background
# git commit id : 35c3490fb8362dc08cd0abbb1fd6e5b2c2a783f4
# resolved problem : data\problems\21.txt
# Solver     : MergeAll
# Inst. Cost : 0 (0.00 %)
#  Sim. Cost : 160852 (100.00 %)
# Total Cost : 160852
# Elapsed    : 9.999999999999999e-06 s
# cost = 21608
# num_intervals = 80
color [0] [252, 252, 251, 255]
cut [0] [y] [5]
color [0.1] [209, 88, 58, 255]
cut [0.1] [380, 95]
merge [0.1.2] [0.1.3]
color [1] [228, 232, 223, 255]
cut [1] [x] [5]
color [1.1] [23, 9, 13, 255]
cut [1.1] [y] [100]
color [1.1.1] [33, 24, 28, 255]
cut [1.1.1] [y] [105]
color [1.1.1.1] [232, 235, 229, 255]
cut [1.1.1.1] [x] [385]
color [1.1.1.1.0] [242, 216, 134, 255]
cut [1.1.1.1.0] [255, 390]
merge [1.1.1.1.0.3] [1.1.1.1.0.0]
color [2] [237, 232, 221, 255]
cut [2] [y] [395]
color [2.0] [52, 30, 25, 255]
cut [2.0] [x] [245]
color [2.0.0] [239, 237, 226, 255]
cut [2.0.0] [y] [360]
color [2.0.0.0] [58, 50, 52, 255]
cut [2.0.0.0] [y] [355]
color [2.0.0.0.0] [39, 12, 13, 255]
cut [2.0.0.0.0] [y] [350]
color [2.0.0.0.0.0] [252, 252, 241, 255]
cut [2.0.0.0.0.0] [40, 260]
merge [2.0.0.0.0.0.1] [2.0.0.0.0.0.2]
color [3] [204, 203, 200, 255]
cut [3] [150, 145]
merge [3.2] [3.3]
color [4] [54, 31, 30, 255]
cut [4] [x] [50]
color [4.1] [18, 5, 7, 255]
cut [4.1] [y] [155]
color [4.1.1] [202, 73, 44, 255]
cut [4.1.1] [y] [210]
color [4.1.1.1] [216, 86, 59, 255]
cut [4.1.1.1] [x] [105]
color [4.1.1.1.1] [210, 82, 54, 255]
color [3.0] [28, 10, 15, 255]
color [2.0.0.0.0.0.0] [230, 234, 227, 255]
color [1.1.1.1.0.1] [53, 52, 45, 255]
cut [1.1.1.1.0.1] [x] [375]
color [1.1.1.1.0.1.0] [241, 215, 133, 255]
cut [1.1.1.1.0.1.0] [y] [360]
color [1.1.1.1.0.1.0.0] [160, 145, 95, 255]
cut [1.1.1.1.0.1.0.0] [y] [355]
color [1.1.1.1.0.1.0.0.0] [31, 18, 8, 255]
cut [1.1.1.1.0.1.0.0.0] [y] [350]
color [1.1.1.1.0.1.0.0.0.0] [229, 230, 222, 255]
cut [1.1.1.1.0.1.0.0.0.0] [y] [145]
color [1.1.1.1.0.1.0.0.0.0.1] [34, 32, 31, 255]
cut [1.1.1.1.0.1.0.0.0.0.1] [y] [155]
color [1.1.1.1.0.1.0.0.0.0.1.1] [232, 231, 216, 255]
cut [1.1.1.1.0.1.0.0.0.0.1.1] [310, 250]
merge [1.1.1.1.0.1.0.0.0.0.1.1.2] [1.1.1.1.0.1.0.0.0.0.1.1.3]
color [5] [24, 15, 8, 255]
cut [5] [y] [255]
color [5.1] [242, 217, 135, 255]
color [1.1.1.1.0.1.0.0.0.0.1.1.1] [54, 52, 52, 255]
cut [1.1.1.1.0.1.0.0.0.0.1.1.1] [x] [320]
color [1.1.1.1.0.1.0.0.0.0.1.1.1.1] [245, 244, 231, 255]
color [0.1.0] [18, 5, 6, 255]
cut [0.1.0] [x] [375]
color [0.1.0.0] [238, 210, 120, 255]
cut [0.1.0.0] [x] [40]
color [0.1.0.0.1] [46, 30, 22, 255]
cut [0.1.0.0.1] [x] [50]
color [0.1.0.0.1.1] [223, 223, 212, 255]
cut [0.1.0.0.1.1] [145, 45]
merge [0.1.0.0.1.1.1] [0.1.0.0.1.1.2]
color [6] [22, 13, 18, 255]
cut [6] [x] [150]
color [6.1] [215, 216, 211, 255]
cut [6.1] [y] [20]
color [6.1.1] [5, 1, 2, 255]
cut [6.1.1] [y] [25]
color [6.1.1.1] [11, 2, 5, 255]
cut [6.1.1.1] [245, 55]
merge [6.1.1.1.1] [6.1.1.1.2]
color [7] [12, 7, 10, 255]
cut [7] [x] [250]
color [7.1] [42, 41, 163, 255]
color [6.1.1.1.3] [199, 200, 200, 255]
color [0.1.0.0.1.1.3] [28, 10, 14, 255]
# Solver     : IntervalDPSolver3
# Inst. Cost : 3582 (16.58 %)
#  Sim. Cost : 18026 (83.42 %)
# Total Cost : 21608
# Elapsed    : 3816.337677 s
